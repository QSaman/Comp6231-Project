package ServerImplementation;


/**
* ServerImplementation/ServerInterfacePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ServerImplementation.idl
* Wednesday, October 25, 2017 12:11:15 PM EDT
*/

public abstract class ServerInterfacePOA extends org.omg.PortableServer.Servant
 implements ServerImplementation.ServerInterfaceOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("createRoom", new java.lang.Integer (0));
    _methods.put ("deleteRoom", new java.lang.Integer (1));
    _methods.put ("bookRoom", new java.lang.Integer (2));
    _methods.put ("getAvailableTimeSlot", new java.lang.Integer (3));
    _methods.put ("cancelBooking", new java.lang.Integer (4));
    _methods.put ("changeReservation", new java.lang.Integer (5));
    _methods.put ("setAdminID", new java.lang.Integer (6));
    _methods.put ("setStudentID", new java.lang.Integer (7));
    _methods.put ("signOut", new java.lang.Integer (8));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // ServerImplementation/ServerInterface/createRoom
       {
         String adminID = in.read_string ();
         int roomNumber = in.read_long ();
         String date = in.read_string ();
         String listOfTimeSlots = in.read_string ();
         String $result = null;
         $result = this.createRoom (adminID, roomNumber, date, listOfTimeSlots);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // ServerImplementation/ServerInterface/deleteRoom
       {
         String adminID = in.read_string ();
         int roomNumber = in.read_long ();
         String date = in.read_string ();
         String listOfTimeSlots = in.read_string ();
         String $result = null;
         $result = this.deleteRoom (adminID, roomNumber, date, listOfTimeSlots);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 2:  // ServerImplementation/ServerInterface/bookRoom
       {
         String studentID = in.read_string ();
         int campus = in.read_long ();
         int roomNumber = in.read_long ();
         String date = in.read_string ();
         String startTime = in.read_string ();
         String endTime = in.read_string ();
         String $result = null;
         $result = this.bookRoom (studentID, campus, roomNumber, date, startTime, endTime);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 3:  // ServerImplementation/ServerInterface/getAvailableTimeSlot
       {
         String studentID = in.read_string ();
         String date = in.read_string ();
         String $result = null;
         $result = this.getAvailableTimeSlot (studentID, date);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 4:  // ServerImplementation/ServerInterface/cancelBooking
       {
         String studentID = in.read_string ();
         String bookingID = in.read_string ();
         String $result = null;
         $result = this.cancelBooking (studentID, bookingID);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 5:  // ServerImplementation/ServerInterface/changeReservation
       {
         String studentID = in.read_string ();
         String bookingID = in.read_string ();
         int campus = in.read_long ();
         int roomNumber = in.read_long ();
         String startTime = in.read_string ();
         String endTime = in.read_string ();
         String $result = null;
         $result = this.changeReservation (studentID, bookingID, campus, roomNumber, startTime, endTime);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 6:  // ServerImplementation/ServerInterface/setAdminID
       {
         String adminID = in.read_string ();
         boolean $result = false;
         $result = this.setAdminID (adminID);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 7:  // ServerImplementation/ServerInterface/setStudentID
       {
         String studentID = in.read_string ();
         boolean $result = false;
         $result = this.setStudentID (studentID);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 8:  // ServerImplementation/ServerInterface/signOut
       {
         String ID = in.read_string ();
         this.signOut (ID);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:ServerImplementation/ServerInterface:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public ServerInterface _this() 
  {
    return ServerInterfaceHelper.narrow(
    super._this_object());
  }

  public ServerInterface _this(org.omg.CORBA.ORB orb) 
  {
    return ServerInterfaceHelper.narrow(
    super._this_object(orb));
  }


} // class ServerInterfacePOA
